# 1. Ensure that your repository contains the necessary configuration
#    Google Kubernetes Engine cluster,including deployment.yml, kustomization.yml, service.yml, etc.

# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

# TODO
# 1. setup kustomization
# 2. create k8s env namespace (mach kustomization), in here is 'staging' and 'production'
# 3. finish the env variable

# prettier-ignore
name: Firstory CI/CD

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches:
      - master
      - staging

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1 # Add your cluster name here.
  GKE_ZONE: us-central1-c # Add your cluster zone here.
  DEPLOYMENT_NAME: Firstory-Prisma # Add your deployment name here.

jobs:
  test-build-publish-deploy:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install
    - run: yarn lint
    - run: yarn test
    - name: Deploy staging
      if: github.ref == 'refs/heads/staging'

      # Setup gcloud CLI
      name: Setup gcloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}
